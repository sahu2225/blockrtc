/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_error";
exports.ids = ["pages/_error"];
exports.modules = {

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module.compiled */ \"./node_modules/next/dist/server/future/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"./node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n/* harmony import */ var private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-pages/_error */ \"./node_modules/next/dist/pages/_error.js\");\n/* harmony import */ var private_next_pages_error__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__]);\nprivate_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/_error\",\n        pathname: \"/_error\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTJnBhZ2U9JTJGX2Vycm9yJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZXJyb3ImYWJzb2x1dGVBcHBQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAmYWJzb2x1dGVEb2N1bWVudFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2RvY3VtZW50Jm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDaEM7QUFDTDtBQUMxRDtBQUNvRDtBQUNWO0FBQzFDO0FBQ3NEO0FBQ3REO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxxREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyx1QkFBdUIsd0VBQUssQ0FBQyxxREFBUTtBQUNyQyx1QkFBdUIsd0VBQUssQ0FBQyxxREFBUTtBQUNyQywyQkFBMkIsd0VBQUssQ0FBQyxxREFBUTtBQUN6QyxlQUFlLHdFQUFLLENBQUMscURBQVE7QUFDN0Isd0JBQXdCLHdFQUFLLENBQUMscURBQVE7QUFDN0M7QUFDTyxnQ0FBZ0Msd0VBQUssQ0FBQyxxREFBUTtBQUM5QyxnQ0FBZ0Msd0VBQUssQ0FBQyxxREFBUTtBQUM5QyxpQ0FBaUMsd0VBQUssQ0FBQyxxREFBUTtBQUMvQyxnQ0FBZ0Msd0VBQUssQ0FBQyxxREFBUTtBQUM5QyxvQ0FBb0Msd0VBQUssQ0FBQyxxREFBUTtBQUN6RDtBQUNPLHdCQUF3Qix5R0FBZ0I7QUFDL0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxXQUFXO0FBQ1gsZ0JBQWdCO0FBQ2hCLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3doYXRzYXBwLW1ldGFtYXNrLWNsb25lLz80MDBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgYXBwIGFuZCBkb2N1bWVudCBtb2R1bGVzLlxuaW1wb3J0IERvY3VtZW50IGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2RvY3VtZW50XCI7XG5pbXBvcnQgQXBwIGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2FwcFwiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fZXJyb3JcIjtcbi8vIFJlLWV4cG9ydCB0aGUgY29tcG9uZW50IChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcImdldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbmV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgXCJyZXBvcnRXZWJWaXRhbHNcIik7XG4vLyBSZS1leHBvcnQgbGVnYWN5IG1ldGhvZHMuXG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJ1bnN0YWJsZV9nZXRTdGF0aWNQcm9wc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhdGhzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhcmFtcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhcmFtc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTZXJ2ZXJQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wc1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTLFxuICAgICAgICBwYWdlOiBcIi9fZXJyb3JcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL19lcnJvclwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIEFwcCxcbiAgICAgICAgRG9jdW1lbnRcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "./context/P2PContext.tsx":
/*!********************************!*\
  !*** ./context/P2PContext.tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   P2PProvider: () => (/* binding */ P2PProvider),\n/* harmony export */   useP2P: () => (/* binding */ useP2P)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SocketContext */ \"./context/SocketContext.tsx\");\n/* harmony import */ var _WalletContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WalletContext */ \"./context/WalletContext.tsx\");\n/* harmony import */ var _utils_webrtc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/webrtc */ \"./utils/webrtc.ts\");\n/* harmony import */ var _utils_encryption__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/encryption */ \"./utils/encryption.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_SocketContext__WEBPACK_IMPORTED_MODULE_2__, _WalletContext__WEBPACK_IMPORTED_MODULE_3__]);\n([_SocketContext__WEBPACK_IMPORTED_MODULE_2__, _WalletContext__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nconst P2PContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction P2PProvider({ children }) {\n    const [connections, setConnections] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [connectionStates, setConnectionStates] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());\n    const { socket } = (0,_SocketContext__WEBPACK_IMPORTED_MODULE_2__.useSocket)();\n    const { account, isAuthenticated } = (0,_WalletContext__WEBPACK_IMPORTED_MODULE_3__.useWallet)();\n    // Initialize secure storage with error handling\n    const [secureStorage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>{\n        try {\n            return new _utils_encryption__WEBPACK_IMPORTED_MODULE_5__.SecureStorage();\n        } catch (error) {\n            console.error(\"Failed to initialize secure storage:\", error);\n            return null;\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"P2P Context effect:\", {\n            socket: !!socket,\n            account,\n            isAuthenticated\n        });\n        if (socket && account && isAuthenticated) {\n            console.log(\"Initializing P2P context...\");\n            setupSignalingHandlers();\n            loadStoredMessages();\n            initializeEncryption();\n        }\n    }, [\n        socket,\n        account,\n        isAuthenticated\n    ]);\n    const initializeEncryption = async ()=>{\n        try {\n            // Get or create encryption signature\n            let signature = localStorage.getItem(`encryption_sig_${account}`);\n            if (!signature) {\n                // In a real app, you'd get this from wallet signing\n                signature = `signature_${account}_${Date.now()}`;\n                localStorage.setItem(`encryption_sig_${account}`, signature);\n            }\n            const encryption = _utils_encryption__WEBPACK_IMPORTED_MODULE_5__.EncryptionManager.getInstance();\n            await encryption.initializeKey(account, signature);\n        } catch (error) {\n            console.error(\"Failed to initialize encryption:\", error);\n        }\n    };\n    const loadStoredMessages = async ()=>{\n        try {\n            if (secureStorage && account) {\n                const storedMessages = await secureStorage.getItem(`p2p_messages_${account}`);\n                if (storedMessages) {\n                    setMessages(storedMessages);\n                }\n            } else {\n                // Fallback to regular localStorage\n                const stored = localStorage.getItem(`p2p_messages_${account}`);\n                if (stored) {\n                    const parsedMessages = JSON.parse(stored);\n                    setMessages(parsedMessages);\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to load stored messages:\", error);\n            // Try fallback\n            try {\n                const stored = localStorage.getItem(`p2p_messages_${account}`);\n                if (stored) {\n                    const parsedMessages = JSON.parse(stored);\n                    setMessages(parsedMessages);\n                }\n            } catch (fallbackError) {\n                console.error(\"Fallback load also failed:\", fallbackError);\n            }\n        }\n    };\n    const saveMessages = async (newMessages)=>{\n        try {\n            if (secureStorage && account) {\n                await secureStorage.setItem(`p2p_messages_${account}`, newMessages);\n            } else {\n                // Fallback to regular localStorage if secure storage fails\n                localStorage.setItem(`p2p_messages_${account}`, JSON.stringify(newMessages));\n            }\n        } catch (error) {\n            console.error(\"Failed to save messages:\", error);\n            // Fallback to regular localStorage\n            try {\n                localStorage.setItem(`p2p_messages_${account}`, JSON.stringify(newMessages));\n            } catch (fallbackError) {\n                console.error(\"Fallback save also failed:\", fallbackError);\n            }\n        }\n    };\n    const setupSignalingHandlers = ()=>{\n        if (!socket) return;\n        // Handle WebRTC offers\n        socket.on(\"webrtc-offer\", async (data)=>{\n            console.log(\"Received WebRTC offer from:\", data.sender);\n            const connection = getOrCreateConnection(data.sender);\n            await connection.handleOffer(data.offer, data.sender);\n        });\n        // Handle WebRTC answers\n        socket.on(\"webrtc-answer\", async (data)=>{\n            console.log(\"Received WebRTC answer from:\", data.sender);\n            const connection = connections.get(data.sender);\n            if (connection) {\n                await connection.handleAnswer(data.answer);\n            }\n        });\n        // Handle ICE candidates\n        socket.on(\"webrtc-ice-candidate\", async (data)=>{\n            console.log(\"Received ICE candidate from:\", data.sender);\n            const connection = connections.get(data.sender);\n            if (connection) {\n                await connection.handleIceCandidate(data.candidate);\n            }\n        });\n        // Handle call offers\n        socket.on(\"webrtc-call-offer\", async (data)=>{\n            console.log(\"Received call offer from:\", data.sender);\n        // Handle incoming call UI here\n        });\n    };\n    const getOrCreateConnection = (targetAddress)=>{\n        let connection = connections.get(targetAddress);\n        if (!connection) {\n            console.log(\"Creating new WebRTC connection for:\", targetAddress);\n            connection = new _utils_webrtc__WEBPACK_IMPORTED_MODULE_4__.WebRTCManager(socket, account);\n            // Set up message handler\n            connection.onMessage((message)=>{\n                console.log(\"Received P2P message:\", message);\n                setMessages((prev)=>{\n                    const updated = [\n                        ...prev,\n                        message\n                    ];\n                    saveMessages(updated);\n                    return updated;\n                });\n            });\n            // Set up connection state handler\n            connection.onConnectionState((state)=>{\n                console.log(`P2P connection to ${targetAddress} state:`, state);\n                setConnectionStates((prev)=>new Map(prev.set(targetAddress, state)));\n                // If connection failed, we might want to retry or clean up\n                if (state === \"failed\" || state === \"closed\") {\n                    console.log(\"Connection failed/closed, cleaning up...\");\n                // Don't immediately remove - let user decide to retry\n                }\n            });\n            setConnections((prev)=>new Map(prev.set(targetAddress, connection)));\n        } else {\n            // Check if existing connection is in a failed state and needs reset\n            const currentState = connection.getConnectionState();\n            if (currentState === \"failed\" || currentState === \"closed\") {\n                console.log(\"Resetting failed connection for:\", targetAddress);\n                connection.reset();\n            }\n        }\n        return connection;\n    };\n    const initializeP2PConnection = async (targetAddress)=>{\n        try {\n            console.log(\"Initializing P2P connection to:\", targetAddress);\n            const connection = getOrCreateConnection(targetAddress);\n            // Set initial state\n            setConnectionStates((prev)=>new Map(prev.set(targetAddress, \"connecting\")));\n            await connection.initiateConnection(targetAddress);\n        } catch (error) {\n            console.error(\"Failed to initialize P2P connection:\", error);\n            setConnectionStates((prev)=>new Map(prev.set(targetAddress, \"failed\")));\n            throw error;\n        }\n    };\n    const sendP2PMessage = async (targetAddress, content, type = \"text\")=>{\n        try {\n            let connection = connections.get(targetAddress);\n            let retryCount = 0;\n            const maxRetries = 2;\n            while(retryCount <= maxRetries){\n                if (!connection || connection.getConnectionState() !== \"connected\") {\n                    console.log(`Attempt ${retryCount + 1} to establish P2P connection`);\n                    try {\n                        await initializeP2PConnection(targetAddress);\n                        // Wait for connection to establish (reduced timeout)\n                        await new Promise((resolve)=>setTimeout(resolve, 1000));\n                        connection = connections.get(targetAddress);\n                    } catch (connectionError) {\n                        console.error(\"Connection attempt failed:\", connectionError);\n                        retryCount++;\n                        if (retryCount <= maxRetries) {\n                            console.log(\"Retrying connection...\");\n                            await new Promise((resolve)=>setTimeout(resolve, 500));\n                            continue;\n                        } else {\n                            console.error(\"Max retries reached, giving up\");\n                            return false;\n                        }\n                    }\n                }\n                if (connection && connection.getConnectionState() === \"connected\") {\n                    const message = {\n                        id: `${Date.now()}_${Math.random()}`,\n                        type,\n                        content,\n                        timestamp: Date.now(),\n                        sender: account\n                    };\n                    const success = connection.sendMessage(message);\n                    if (success) {\n                        // Add to local messages\n                        setMessages((prev)=>{\n                            const updated = [\n                                ...prev,\n                                message\n                            ];\n                            saveMessages(updated);\n                            return updated;\n                        });\n                        return true;\n                    }\n                }\n                retryCount++;\n                if (retryCount <= maxRetries) {\n                    console.log(\"Message send failed, retrying...\");\n                    await new Promise((resolve)=>setTimeout(resolve, 300));\n                }\n            }\n            console.error(\"Failed to send P2P message after all retries\");\n            return false;\n        } catch (error) {\n            console.error(\"Error sending P2P message:\", error);\n            return false;\n        }\n    };\n    const startP2PCall = async (targetAddress, video = false)=>{\n        const connection = getOrCreateConnection(targetAddress);\n        await connection.startCall(video);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(P2PContext.Provider, {\n        value: {\n            connections,\n            sendP2PMessage,\n            messages,\n            connectionStates,\n            initializeP2PConnection,\n            startP2PCall\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\context\\\\P2PContext.tsx\",\n        lineNumber: 283,\n        columnNumber: 5\n    }, this);\n}\nfunction useP2P() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(P2PContext);\n    if (context === undefined) {\n        throw new Error(\"useP2P must be used within a P2PProvider\");\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/P2PContext.tsx\n");

/***/ }),

/***/ "./context/SocketContext.tsx":
/*!***********************************!*\
  !*** ./context/SocketContext.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider),\n/* harmony export */   useSocket: () => (/* binding */ useSocket)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-client */ \"socket.io-client\");\n/* harmony import */ var _WalletContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WalletContext */ \"./context/WalletContext.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([socket_io_client__WEBPACK_IMPORTED_MODULE_2__, _WalletContext__WEBPACK_IMPORTED_MODULE_3__]);\n([socket_io_client__WEBPACK_IMPORTED_MODULE_2__, _WalletContext__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst SocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction SocketProvider({ children }) {\n    const [socket, setSocket] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [onlineUsers, setOnlineUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const { account, isConnected, isAuthenticated } = (0,_WalletContext__WEBPACK_IMPORTED_MODULE_3__.useWallet)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isConnected && isAuthenticated && account) {\n            console.log(\"Connecting socket for user:\", account);\n            const newSocket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_2__.io)(\"http://localhost:3001\", {\n                query: {\n                    userId: account\n                }\n            });\n            newSocket.on(\"connect\", ()=>{\n                console.log(\"Socket connected:\", newSocket.id);\n                // Join with user ID when connected\n                newSocket.emit(\"join\", account);\n                console.log(\"Emitted join event for user:\", account);\n            });\n            newSocket.on(\"getOnlineUsers\", (users)=>{\n                console.log(\"Online users updated:\", users);\n                setOnlineUsers(users);\n            });\n            newSocket.on(\"disconnect\", ()=>{\n                console.log(\"Socket disconnected\");\n            });\n            setSocket(newSocket);\n            return ()=>{\n                console.log(\"Closing socket connection\");\n                newSocket.close();\n            };\n        } else {\n            // Clear socket if not authenticated\n            if (socket) {\n                socket.close();\n                setSocket(null);\n            }\n        }\n    }, [\n        isConnected,\n        isAuthenticated,\n        account\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SocketContext.Provider, {\n        value: {\n            socket,\n            onlineUsers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\context\\\\SocketContext.tsx\",\n        lineNumber: 57,\n        columnNumber: 5\n    }, this);\n}\nfunction useSocket() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SocketContext);\n    if (context === undefined) {\n        throw new Error(\"useSocket must be used within a SocketProvider\");\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb250ZXh0L1NvY2tldENvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFpRjtBQUNwQztBQUNGO0FBTzNDLE1BQU1NLDhCQUFnQk4sb0RBQWFBLENBQWdDTztBQUU1RCxTQUFTQyxlQUFlLEVBQUVDLFFBQVEsRUFBMkI7SUFDbEUsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdSLCtDQUFRQSxDQUFnQjtJQUNwRCxNQUFNLENBQUNTLGFBQWFDLGVBQWUsR0FBR1YsK0NBQVFBLENBQVcsRUFBRTtJQUMzRCxNQUFNLEVBQUVXLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxlQUFlLEVBQUUsR0FBR1gseURBQVNBO0lBRTNESCxnREFBU0EsQ0FBQztRQUNSLElBQUlhLGVBQWVDLG1CQUFtQkYsU0FBUztZQUM3Q0csUUFBUUMsR0FBRyxDQUFDLCtCQUErQko7WUFFM0MsTUFBTUssWUFBWWYsb0RBQUVBLENBQUMseUJBQXlCO2dCQUM1Q2dCLE9BQU87b0JBQUVDLFFBQVFQO2dCQUFRO1lBQzNCO1lBRUFLLFVBQVVHLEVBQUUsQ0FBQyxXQUFXO2dCQUN0QkwsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQkMsVUFBVUksRUFBRTtnQkFDN0MsbUNBQW1DO2dCQUNuQ0osVUFBVUssSUFBSSxDQUFDLFFBQVFWO2dCQUN2QkcsUUFBUUMsR0FBRyxDQUFDLGdDQUFnQ0o7WUFDOUM7WUFFQUssVUFBVUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDRztnQkFDOUJSLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJPO2dCQUNyQ1osZUFBZVk7WUFDakI7WUFFQU4sVUFBVUcsRUFBRSxDQUFDLGNBQWM7Z0JBQ3pCTCxRQUFRQyxHQUFHLENBQUM7WUFDZDtZQUVBUCxVQUFVUTtZQUVWLE9BQU87Z0JBQ0xGLFFBQVFDLEdBQUcsQ0FBQztnQkFDWkMsVUFBVU8sS0FBSztZQUNqQjtRQUNGLE9BQU87WUFDTCxvQ0FBb0M7WUFDcEMsSUFBSWhCLFFBQVE7Z0JBQ1ZBLE9BQU9nQixLQUFLO2dCQUNaZixVQUFVO1lBQ1o7UUFDRjtJQUNGLEdBQUc7UUFBQ0k7UUFBYUM7UUFBaUJGO0tBQVE7SUFFMUMscUJBQ0UsOERBQUNSLGNBQWNxQixRQUFRO1FBQUNDLE9BQU87WUFBRWxCO1lBQVFFO1FBQVk7a0JBQ2xESDs7Ozs7O0FBR1A7QUFFTyxTQUFTb0I7SUFDZCxNQUFNQyxVQUFVN0IsaURBQVVBLENBQUNLO0lBQzNCLElBQUl3QixZQUFZdkIsV0FBVztRQUN6QixNQUFNLElBQUl3QixNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3doYXRzYXBwLW1ldGFtYXNrLWNsb25lLy4vY29udGV4dC9Tb2NrZXRDb250ZXh0LnRzeD8wNDY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBpbywgU29ja2V0IH0gZnJvbSAnc29ja2V0LmlvLWNsaWVudCdcclxuaW1wb3J0IHsgdXNlV2FsbGV0IH0gZnJvbSAnLi9XYWxsZXRDb250ZXh0J1xyXG5cclxuaW50ZXJmYWNlIFNvY2tldENvbnRleHRUeXBlIHtcclxuICBzb2NrZXQ6IFNvY2tldCB8IG51bGxcclxuICBvbmxpbmVVc2Vyczogc3RyaW5nW11cclxufVxyXG5cclxuY29uc3QgU29ja2V0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8U29ja2V0Q29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZClcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBTb2NrZXRQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0Tm9kZSB9KSB7XHJcbiAgY29uc3QgW3NvY2tldCwgc2V0U29ja2V0XSA9IHVzZVN0YXRlPFNvY2tldCB8IG51bGw+KG51bGwpXHJcbiAgY29uc3QgW29ubGluZVVzZXJzLCBzZXRPbmxpbmVVc2Vyc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pXHJcbiAgY29uc3QgeyBhY2NvdW50LCBpc0Nvbm5lY3RlZCwgaXNBdXRoZW50aWNhdGVkIH0gPSB1c2VXYWxsZXQoKVxyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGlzQ29ubmVjdGVkICYmIGlzQXV0aGVudGljYXRlZCAmJiBhY2NvdW50KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW5nIHNvY2tldCBmb3IgdXNlcjonLCBhY2NvdW50KVxyXG4gICAgICBcclxuICAgICAgY29uc3QgbmV3U29ja2V0ID0gaW8oJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMScsIHtcclxuICAgICAgICBxdWVyeTogeyB1c2VySWQ6IGFjY291bnQgfVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgbmV3U29ja2V0Lm9uKCdjb25uZWN0JywgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdTb2NrZXQgY29ubmVjdGVkOicsIG5ld1NvY2tldC5pZClcclxuICAgICAgICAvLyBKb2luIHdpdGggdXNlciBJRCB3aGVuIGNvbm5lY3RlZFxyXG4gICAgICAgIG5ld1NvY2tldC5lbWl0KCdqb2luJywgYWNjb3VudClcclxuICAgICAgICBjb25zb2xlLmxvZygnRW1pdHRlZCBqb2luIGV2ZW50IGZvciB1c2VyOicsIGFjY291bnQpXHJcbiAgICAgIH0pXHJcblxyXG4gICAgICBuZXdTb2NrZXQub24oJ2dldE9ubGluZVVzZXJzJywgKHVzZXJzOiBzdHJpbmdbXSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdPbmxpbmUgdXNlcnMgdXBkYXRlZDonLCB1c2VycylcclxuICAgICAgICBzZXRPbmxpbmVVc2Vycyh1c2VycylcclxuICAgICAgfSlcclxuXHJcbiAgICAgIG5ld1NvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnU29ja2V0IGRpc2Nvbm5lY3RlZCcpXHJcbiAgICAgIH0pXHJcblxyXG4gICAgICBzZXRTb2NrZXQobmV3U29ja2V0KVxyXG5cclxuICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnQ2xvc2luZyBzb2NrZXQgY29ubmVjdGlvbicpXHJcbiAgICAgICAgbmV3U29ja2V0LmNsb3NlKClcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gQ2xlYXIgc29ja2V0IGlmIG5vdCBhdXRoZW50aWNhdGVkXHJcbiAgICAgIGlmIChzb2NrZXQpIHtcclxuICAgICAgICBzb2NrZXQuY2xvc2UoKVxyXG4gICAgICAgIHNldFNvY2tldChudWxsKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSwgW2lzQ29ubmVjdGVkLCBpc0F1dGhlbnRpY2F0ZWQsIGFjY291bnRdKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFNvY2tldENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgc29ja2V0LCBvbmxpbmVVc2VycyB9fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9Tb2NrZXRDb250ZXh0LlByb3ZpZGVyPlxyXG4gIClcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVNvY2tldCgpIHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChTb2NrZXRDb250ZXh0KVxyXG4gIGlmIChjb250ZXh0ID09PSB1bmRlZmluZWQpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcigndXNlU29ja2V0IG11c3QgYmUgdXNlZCB3aXRoaW4gYSBTb2NrZXRQcm92aWRlcicpXHJcbiAgfVxyXG4gIHJldHVybiBjb250ZXh0XHJcbn0iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImlvIiwidXNlV2FsbGV0IiwiU29ja2V0Q29udGV4dCIsInVuZGVmaW5lZCIsIlNvY2tldFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJzb2NrZXQiLCJzZXRTb2NrZXQiLCJvbmxpbmVVc2VycyIsInNldE9ubGluZVVzZXJzIiwiYWNjb3VudCIsImlzQ29ubmVjdGVkIiwiaXNBdXRoZW50aWNhdGVkIiwiY29uc29sZSIsImxvZyIsIm5ld1NvY2tldCIsInF1ZXJ5IiwidXNlcklkIiwib24iLCJpZCIsImVtaXQiLCJ1c2VycyIsImNsb3NlIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZVNvY2tldCIsImNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./context/SocketContext.tsx\n");

/***/ }),

/***/ "./context/WalletContext.tsx":
/*!***********************************!*\
  !*** ./context/WalletContext.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletProvider: () => (/* binding */ WalletProvider),\n/* harmony export */   useWallet: () => (/* binding */ useWallet)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"ethers\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([ethers__WEBPACK_IMPORTED_MODULE_2__]);\nethers__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst WalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction WalletProvider({ children }) {\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkConnection();\n    }, []);\n    const checkConnection = async ()=>{\n        if (false) {}\n    };\n    const connectWallet = async ()=>{\n        if (false) {} else {\n            alert(\"Please install MetaMask!\");\n        }\n    };\n    const authenticateUser = async (account)=>{\n        try {\n            const message = `Welcome to WhatsApp Clone!\\n\\nSign this message to authenticate your wallet.\\n\\nWallet: ${account}\\nTimestamp: ${Date.now()}`;\n            const signature = await signMessage(message);\n            // Store authentication in localStorage\n            localStorage.setItem(\"wallet_auth\", JSON.stringify({\n                account,\n                signature,\n                timestamp: Date.now()\n            }));\n            setIsAuthenticated(true);\n        } catch (error) {\n            console.error(\"Authentication failed:\", error);\n            setAccount(null);\n            setIsConnected(false);\n        }\n    };\n    const signMessage = async (message)=>{\n        if (!window.ethereum) throw new Error(\"MetaMask not found\");\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        return await signer.signMessage(message);\n    };\n    const disconnectWallet = ()=>{\n        setAccount(null);\n        setIsConnected(false);\n        setIsAuthenticated(false);\n        localStorage.removeItem(\"wallet_auth\");\n        localStorage.removeItem(\"chat_messages\");\n        localStorage.removeItem(\"contacts\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WalletContext.Provider, {\n        value: {\n            account,\n            isConnected,\n            isAuthenticated,\n            connectWallet,\n            disconnectWallet,\n            signMessage\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\context\\\\WalletContext.tsx\",\n        lineNumber: 110,\n        columnNumber: 9\n    }, this);\n}\nfunction useWallet() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WalletContext);\n    if (context === undefined) {\n        throw new Error(\"useWallet must be used within a WalletProvider\");\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/WalletContext.tsx\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_WalletContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/WalletContext */ \"./context/WalletContext.tsx\");\n/* harmony import */ var _context_SocketContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/SocketContext */ \"./context/SocketContext.tsx\");\n/* harmony import */ var _context_P2PContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/P2PContext */ \"./context/P2PContext.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_context_WalletContext__WEBPACK_IMPORTED_MODULE_2__, _context_SocketContext__WEBPACK_IMPORTED_MODULE_3__, _context_P2PContext__WEBPACK_IMPORTED_MODULE_4__]);\n([_context_WalletContext__WEBPACK_IMPORTED_MODULE_2__, _context_SocketContext__WEBPACK_IMPORTED_MODULE_3__, _context_P2PContext__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_WalletContext__WEBPACK_IMPORTED_MODULE_2__.WalletProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_SocketContext__WEBPACK_IMPORTED_MODULE_3__.SocketProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_P2PContext__WEBPACK_IMPORTED_MODULE_4__.P2PProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...pageProps\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\pages\\\\_app.tsx\",\n                    lineNumber: 12,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\pages\\\\_app.tsx\",\n                lineNumber: 11,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\pages\\\\_app.tsx\",\n            lineNumber: 10,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Sour\\\\Documents\\\\GitHub\\\\Blockrtc\\\\pages\\\\_app.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFFMkI7QUFDQTtBQUNOO0FBRXBDLFNBQVNHLElBQUksRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQVk7SUFDNUQscUJBQ0UsOERBQUNMLGtFQUFjQTtrQkFDYiw0RUFBQ0Msa0VBQWNBO3NCQUNiLDRFQUFDQyw0REFBV0E7MEJBQ1YsNEVBQUNFO29CQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3doYXRzYXBwLW1ldGFtYXNrLWNsb25lLy4vcGFnZXMvX2FwcC50c3g/MmZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9nbG9iYWxzLmNzcydcclxuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJ1xyXG5pbXBvcnQgeyBXYWxsZXRQcm92aWRlciB9IGZyb20gJy4uL2NvbnRleHQvV2FsbGV0Q29udGV4dCdcclxuaW1wb3J0IHsgU29ja2V0UHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0L1NvY2tldENvbnRleHQnXHJcbmltcG9ydCB7IFAyUFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9QMlBDb250ZXh0J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPFdhbGxldFByb3ZpZGVyPlxyXG4gICAgICA8U29ja2V0UHJvdmlkZXI+XHJcbiAgICAgICAgPFAyUFByb3ZpZGVyPlxyXG4gICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxyXG4gICAgICAgIDwvUDJQUHJvdmlkZXI+XHJcbiAgICAgIDwvU29ja2V0UHJvdmlkZXI+XHJcbiAgICA8L1dhbGxldFByb3ZpZGVyPlxyXG4gIClcclxufSJdLCJuYW1lcyI6WyJXYWxsZXRQcm92aWRlciIsIlNvY2tldFByb3ZpZGVyIiwiUDJQUHJvdmlkZXIiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./utils/encryption.ts":
/*!*****************************!*\
  !*** ./utils/encryption.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionManager: () => (/* binding */ EncryptionManager),\n/* harmony export */   SecureStorage: () => (/* binding */ SecureStorage)\n/* harmony export */ });\n// Client-side encryption utilities\nclass EncryptionManager {\n    static getInstance() {\n        if (!EncryptionManager.instance) {\n            EncryptionManager.instance = new EncryptionManager();\n        }\n        return EncryptionManager.instance;\n    }\n    // Initialize encryption key from wallet signature\n    async initializeKey(walletAddress, signature) {\n        const keyMaterial = await crypto.subtle.importKey(\"raw\", new TextEncoder().encode(signature.slice(0, 32)), {\n            name: \"PBKDF2\"\n        }, false, [\n            \"deriveBits\",\n            \"deriveKey\"\n        ]);\n        this.cryptoKey = await crypto.subtle.deriveKey({\n            name: \"PBKDF2\",\n            salt: new TextEncoder().encode(walletAddress),\n            iterations: 100000,\n            hash: \"SHA-256\"\n        }, keyMaterial, {\n            name: \"AES-GCM\",\n            length: 256\n        }, false, [\n            \"encrypt\",\n            \"decrypt\"\n        ]);\n    }\n    // Encrypt data\n    async encrypt(data) {\n        if (!this.cryptoKey) throw new Error(\"Encryption key not initialized\");\n        const iv = crypto.getRandomValues(new Uint8Array(12));\n        const encodedData = new TextEncoder().encode(data);\n        const encryptedData = await crypto.subtle.encrypt({\n            name: \"AES-GCM\",\n            iv\n        }, this.cryptoKey, encodedData);\n        // Combine IV and encrypted data\n        const combined = new Uint8Array(iv.length + encryptedData.byteLength);\n        combined.set(iv);\n        combined.set(new Uint8Array(encryptedData), iv.length);\n        let binaryString = \"\";\n        for(let i = 0; i < combined.length; i++){\n            binaryString += String.fromCharCode(combined[i]);\n        }\n        return btoa(binaryString);\n    }\n    // Decrypt data\n    async decrypt(encryptedData) {\n        if (!this.cryptoKey) throw new Error(\"Encryption key not initialized\");\n        const binaryString = atob(encryptedData);\n        const combined = new Uint8Array(binaryString.length);\n        for(let i = 0; i < binaryString.length; i++){\n            combined[i] = binaryString.charCodeAt(i);\n        }\n        const iv = combined.slice(0, 12);\n        const data = combined.slice(12);\n        const decryptedData = await crypto.subtle.decrypt({\n            name: \"AES-GCM\",\n            iv\n        }, this.cryptoKey, data);\n        return new TextDecoder().decode(decryptedData);\n    }\n    constructor(){\n        this.cryptoKey = null;\n    }\n}\n// Local storage with encryption\nclass SecureStorage {\n    async setItem(key, value) {\n        const serialized = JSON.stringify(value);\n        const encrypted = await this.encryption.encrypt(serialized);\n        localStorage.setItem(key, encrypted);\n    }\n    async getItem(key) {\n        const encrypted = localStorage.getItem(key);\n        if (!encrypted) return null;\n        try {\n            const decrypted = await this.encryption.decrypt(encrypted);\n            return JSON.parse(decrypted);\n        } catch (error) {\n            console.error(\"Failed to decrypt data:\", error);\n            return null;\n        }\n    }\n    removeItem(key) {\n        localStorage.removeItem(key);\n    }\n    async clear() {\n        localStorage.clear();\n    }\n    constructor(){\n        this.encryption = EncryptionManager.getInstance();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/encryption.ts\n");

/***/ }),

/***/ "./utils/webrtc.ts":
/*!*************************!*\
  !*** ./utils/webrtc.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebRTCManager: () => (/* binding */ WebRTCManager)\n/* harmony export */ });\n// WebRTC P2P Connection Manager\nclass WebRTCManager {\n    constructor(socket, localAddress){\n        this.peerConnection = null;\n        this.dataChannel = null;\n        this.localStream = null;\n        this.onMessageCallback = null;\n        this.onConnectionStateCallback = null;\n        this.socket = null;\n        this.localAddress = \"\";\n        this.remoteAddress = \"\";\n        this.isInitiator = false;\n        this.connectionState = \"new\";\n        this.pendingCandidates = [];\n        this.socket = socket;\n        this.localAddress = localAddress;\n        this.setupPeerConnection();\n    }\n    setupPeerConnection() {\n        // STUN servers for NAT traversal\n        const configuration = {\n            iceServers: [\n                {\n                    urls: \"stun:stun.l.google.com:19302\"\n                },\n                {\n                    urls: \"stun:stun1.l.google.com:19302\"\n                }\n            ]\n        };\n        this.peerConnection = new RTCPeerConnection(configuration);\n        // Handle ICE candidates\n        this.peerConnection.onicecandidate = (event)=>{\n            if (event.candidate && this.socket) {\n                this.socket.emit(\"ice-candidate\", {\n                    candidate: event.candidate,\n                    target: this.remoteAddress\n                });\n            }\n        };\n        // Handle connection state changes\n        this.peerConnection.onconnectionstatechange = ()=>{\n            const state = this.peerConnection?.connectionState || \"disconnected\";\n            console.log(\"P2P Connection state:\", state);\n            this.onConnectionStateCallback?.(state);\n        };\n        // Handle incoming data channel\n        this.peerConnection.ondatachannel = (event)=>{\n            const channel = event.channel;\n            this.setupDataChannel(channel);\n        };\n        // Handle remote stream\n        this.peerConnection.ontrack = (event)=>{\n            console.log(\"Received remote stream\");\n        // Handle remote audio/video stream\n        };\n    }\n    setupDataChannel(channel) {\n        this.dataChannel = channel;\n        channel.onopen = ()=>{\n            console.log(\"P2P Data channel opened\");\n            this.onConnectionStateCallback?.(\"connected\");\n        };\n        channel.onclose = ()=>{\n            console.log(\"P2P Data channel closed\");\n            this.onConnectionStateCallback?.(\"disconnected\");\n        };\n        channel.onmessage = (event)=>{\n            try {\n                const message = JSON.parse(event.data);\n                console.log(\"Received P2P message:\", message);\n                this.onMessageCallback?.(message);\n            } catch (error) {\n                console.error(\"Failed to parse P2P message:\", error);\n            }\n        };\n    }\n    // Initiate connection to remote peer\n    async initiateConnection(remoteAddress) {\n        try {\n            console.log(\"Initiating connection to:\", remoteAddress);\n            if (!this.peerConnection) {\n                console.error(\"No peer connection available\");\n                return;\n            }\n            // Check if we're already connected or connecting to this peer\n            if (this.remoteAddress === remoteAddress && (this.connectionState === \"connected\" || this.connectionState === \"connecting\")) {\n                console.log(\"Already connected/connecting to this peer\");\n                return;\n            }\n            this.remoteAddress = remoteAddress;\n            this.isInitiator = true;\n            // Create data channel\n            this.dataChannel = this.peerConnection.createDataChannel(\"messages\", {\n                ordered: true\n            });\n            this.setupDataChannel(this.dataChannel);\n            // Create offer\n            const offer = await this.peerConnection.createOffer();\n            await this.peerConnection.setLocalDescription(offer);\n            console.log(\"Local description (offer) set successfully\");\n            // Send offer through signaling server\n            this.socket.emit(\"webrtc-offer\", {\n                offer,\n                target: remoteAddress,\n                sender: this.localAddress\n            });\n            this.connectionState = \"connecting\";\n        } catch (error) {\n            console.error(\"Error initiating connection:\", error);\n            this.connectionState = \"failed\";\n            this.onConnectionStateCallback?.(\"failed\");\n        }\n    }\n    // Handle incoming offer\n    async handleOffer(offer, senderAddress) {\n        try {\n            console.log(\"Handling offer from:\", senderAddress, \"Current state:\", this.peerConnection?.signalingState);\n            if (!this.peerConnection) {\n                console.error(\"No peer connection available\");\n                return;\n            }\n            // Check if we're in the right state to handle an offer\n            if (this.peerConnection.signalingState !== \"stable\" && this.peerConnection.signalingState !== \"have-local-offer\") {\n                console.warn(\"Ignoring offer in state:\", this.peerConnection.signalingState);\n                return;\n            }\n            this.remoteAddress = senderAddress;\n            this.isInitiator = false;\n            await this.peerConnection.setRemoteDescription(offer);\n            console.log(\"Remote description set successfully\");\n            // Create answer\n            const answer = await this.peerConnection.createAnswer();\n            await this.peerConnection.setLocalDescription(answer);\n            console.log(\"Local description (answer) set successfully\");\n            // Process any pending ICE candidates\n            await this.processPendingCandidates();\n            // Send answer through signaling server\n            this.socket.emit(\"webrtc-answer\", {\n                answer,\n                target: senderAddress,\n                sender: this.localAddress\n            });\n            this.connectionState = \"connecting\";\n        } catch (error) {\n            console.error(\"Error handling offer:\", error);\n            this.connectionState = \"failed\";\n            this.onConnectionStateCallback?.(\"failed\");\n        }\n    }\n    // Handle incoming answer\n    async handleAnswer(answer) {\n        try {\n            console.log(\"Handling answer, Current state:\", this.peerConnection?.signalingState);\n            if (!this.peerConnection) {\n                console.error(\"No peer connection available\");\n                return;\n            }\n            // Check if we're in the right state to handle an answer\n            if (this.peerConnection.signalingState !== \"have-local-offer\") {\n                console.warn(\"Ignoring answer in state:\", this.peerConnection.signalingState);\n                return;\n            }\n            await this.peerConnection.setRemoteDescription(answer);\n            console.log(\"Remote description (answer) set successfully\");\n            // Process any pending ICE candidates\n            await this.processPendingCandidates();\n            this.connectionState = \"connecting\";\n        } catch (error) {\n            console.error(\"Error handling answer:\", error);\n            this.connectionState = \"failed\";\n            this.onConnectionStateCallback?.(\"failed\");\n        }\n    }\n    // Handle ICE candidate\n    async handleIceCandidate(candidate) {\n        try {\n            if (!this.peerConnection) {\n                console.error(\"No peer connection available for ICE candidate\");\n                return;\n            }\n            // If remote description is not set yet, queue the candidate\n            if (this.peerConnection.remoteDescription === null) {\n                console.log(\"Queueing ICE candidate until remote description is set\");\n                this.pendingCandidates.push(candidate);\n                return;\n            }\n            await this.peerConnection.addIceCandidate(candidate);\n            console.log(\"ICE candidate added successfully\");\n        } catch (error) {\n            console.error(\"Error handling ICE candidate:\", error);\n        }\n    }\n    // Process pending ICE candidates\n    async processPendingCandidates() {\n        console.log(\"Processing\", this.pendingCandidates.length, \"pending ICE candidates\");\n        for (const candidate of this.pendingCandidates){\n            try {\n                await this.peerConnection.addIceCandidate(candidate);\n                console.log(\"Pending ICE candidate added successfully\");\n            } catch (error) {\n                console.error(\"Error adding pending ICE candidate:\", error);\n            }\n        }\n        this.pendingCandidates = [];\n    }\n    // Send message through P2P connection\n    sendMessage(message) {\n        if (this.dataChannel && this.dataChannel.readyState === \"open\") {\n            this.dataChannel.send(JSON.stringify(message));\n            return true;\n        }\n        return false;\n    }\n    // Start audio/video call\n    async startCall(video = false) {\n        try {\n            this.localStream = await navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video\n            });\n            // Add tracks to peer connection\n            this.localStream.getTracks().forEach((track)=>{\n                this.peerConnection.addTrack(track, this.localStream);\n            });\n            // Create new offer with media\n            const offer = await this.peerConnection.createOffer();\n            await this.peerConnection.setLocalDescription(offer);\n            this.socket.emit(\"webrtc-call-offer\", {\n                offer,\n                target: this.remoteAddress,\n                sender: this.localAddress,\n                hasVideo: video\n            });\n        } catch (error) {\n            console.error(\"Failed to start call:\", error);\n            throw error;\n        }\n    }\n    // Set message callback\n    onMessage(callback) {\n        this.onMessageCallback = callback;\n    }\n    // Set connection state callback\n    onConnectionState(callback) {\n        this.onConnectionStateCallback = callback;\n    }\n    // Get connection state\n    getConnectionState() {\n        if (this.dataChannel && this.dataChannel.readyState === \"open\") {\n            return \"connected\";\n        }\n        return this.connectionState;\n    }\n    // Close connection\n    close() {\n        console.log(\"Closing WebRTC connection\");\n        if (this.dataChannel) {\n            this.dataChannel.close();\n            this.dataChannel = null;\n        }\n        if (this.localStream) {\n            this.localStream.getTracks().forEach((track)=>track.stop());\n            this.localStream = null;\n        }\n        if (this.peerConnection) {\n            this.peerConnection.close();\n            this.peerConnection = null;\n        }\n        this.connectionState = \"closed\";\n        this.pendingCandidates = [];\n    }\n    // Reset connection for retry\n    reset() {\n        console.log(\"Resetting WebRTC connection\");\n        this.close();\n        this.setupPeerConnection();\n        this.connectionState = \"new\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/webrtc.ts\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("ethers");;

/***/ }),

/***/ "socket.io-client":
/*!***********************************!*\
  !*** external "socket.io-client" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = import("socket.io-client");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();